
/*
 * Copyright Â© 2002 Sun Microsystems, Inc., 4150 Network Circle, Santa Clara,
 * California 95054, U.S.A. All rights reserved.  Sun Microsystems, Inc. has
 * intellectual property rights relating to technology embodied in the product
 * that is described in this document. In particular, and without limitation,
 * these intellectual property rights may include one or more of the U.S.
 * patents listed at http://www.sun.com/patents and one or more additional
 * patents or pending patent applications in the U.S. and in other countries.
 * U.S. Government Rights - Commercial software. Government users are subject
 * to the Sun Microsystems, Inc. standard license agreement and applicable
 * provisions of the FAR and its supplements.  Use is subject to license terms.
 * Sun,  Sun Microsystems,  the Sun logo and  Java are trademarks or registered
 * trademarks of Sun Microsystems, Inc. in the U.S. and other countries.  This
 * product is covered and controlled by U.S. Export Control laws and may be
 * subject to the export or import laws in other countries.  Nuclear, missile,
 * chemical biological weapons or nuclear maritime end uses or end users,
 * whether direct or indirect, are strictly prohibited.  Export or reexport
 * to countries subject to U.S. embargo or to entities identified on U.S.
 * export exclusion lists, including, but not limited to, the denied persons
 * and specially designated nationals lists is strictly prohibited.
 */


options {
  LOOKAHEAD = 1;
  CHOICE_AMBIGUITY_CHECK = 2;
  OTHER_AMBIGUITY_CHECK = 1;
  STATIC = true;
  DEBUG_PARSER = false;
  DEBUG_LOOKAHEAD = false;
  DEBUG_TOKEN_MANAGER = false;
  ERROR_REPORTING = true;
  JAVA_UNICODE_ESCAPE = false;
  UNICODE_INPUT = false;
  IGNORE_CASE = false;
  USER_TOKEN_MANAGER = false;
  USER_CHAR_STREAM = false;
  BUILD_PARSER = true;
  BUILD_TOKEN_MANAGER = true;
  SANITY_CHECK = true;
  FORCE_LA_CHECK = false;
}

PARSER_BEGIN(Jarvis)
import java.io.*;
public class Jarvis {

  public static void main(String args[]) throws ParseException {
    Jarvis parser = new Jarvis(new FileInputStream(args[0]));
    parser.Input();
  }

}

PARSER_END(Jarvis)

SKIP : { " " | "\t" | "\r" | "\n" }

SKIP : {
   "/*": COMENTARIO
}

SKIP : {
   <COMENTARIO_1LINHA: "//"(["a"-"z","A"-"Z","_","0"-"9"," ",".","/","\\","@","%",":"])*>
}

<COMENTARIO> SKIP: {

   "*/" : DEFAULT |
   <~[]>
}

TOKEN : {

  < VIRGULA: ","> |

  < FINAL_COMANDO: ";"> |

  < ATRIBUICAO: "="> |

  < SOMA: "+"> |

  < DIFERENCA: "-"> |

  < MULTIPLICACAO: "*"> |

  < DIVISAO: "/"> |

  < POTENCIA: "^"> |

  < MAIOR: ">"> |

  < MENOR: "<"> |

  < NAO: "!"> |

  < MAIOR_IGUAL: ">="> |

  < MENOR_IGUAL: "<="> |

  < IGUAL: "=="> |

  < OU: "||"> |

  < E: "&&"> |

  < DIFERENTE: "!="> |

  < ENTRADA_DADOS: "in"> |

  < SAIDA_DADOS: "out"> |

  < CONDICIONAL_IF: "if"> |

  < CONDICIONAL_ELSE: ("else")> |

  < LACO_WHILE: "while"> |

  < ABRE_PARENTESIS: "("> |

  < FECHA_PARENTESIS: ")"> |

  < ABRE_CHAVES: "{"> |

  < FECHA_CHAVES: "}"> |
  
  < NUMERIC:  (["0"-"9"])*(".")?(["0"-"9"])+ > |
    
  < STRING:  "\""(["a"-"z","A"-"Z","_","0"-"9"," ",".","/","\\","@","%",":"])*"\"" > |

  < VARIAVEL: ["a"-"z","A"-"Z"](["0"-"9"]|["a"-"z","A"-"Z"])* > 
}


JAVACODE void Input()

{

   Token t;

   do {

      t = getNextToken();

      System.out.println(tokenImage[t.kind]+"\t"+t.image);

   }

   while(t.kind != EOF);

}